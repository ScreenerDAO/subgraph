type _Schema_
  @fulltext(
    name: "companySearch"
    language: en
    algorithm: rank
    include: [{ entity: "Company", fields: [{ name: "name" }, { name: "ticker" }] }]
  )

type Company @entity {
    id: String!
    name: String!
    ticker: String!,
    dataHash: String!
}

# type CompanyAdded @entity(immutable: true) {
#   id: Bytes!
#   id: BigInt! # uint256
#   name: String! # string
#   ticker: String! # string
#   dataHash: String! # string
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type CompanyDataEdited @entity(immutable: true) {
#   id: Bytes!
#   id: BigInt! # uint256
#   dataHash: String! # string
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type CompanyEdited @entity(immutable: true) {
#   id: Bytes!
#   id: BigInt! # uint256
#   name: String! # string
#   ticker: String! # string
#   dataHash: String! # string
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type CompanyNameEdited @entity(immutable: true) {
#   id: Bytes!
#   id: BigInt! # uint256
#   name: String! # string
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type CompanyTickerEdited @entity(immutable: true) {
#   id: Bytes!
#   id: BigInt! # uint256
#   ticker: String! # string
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type Initialized @entity(immutable: true) {
#   id: Bytes!
#   version: Int! # uint8
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }
